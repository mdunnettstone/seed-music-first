<div class = "container">
  <div class = "row sticky background-grey">
    <div class = "col-10 offset-1 col-md-6 offset-md-3">
      <div class = "row booyah-box pb-1 pb-md-3">
        <div class = "col-12 col-md-6 mt-1 mt-md-3">
          <i class="fa fa-map-marker" aria-hidden="true"></i> Room: <b><span class = "bookingroom">Please select</span></b>
        </div>
        <div class = "col-12 col-md-6 mt-1 mt-md-3">
          <i class="fa fa-calendar" aria-hidden="true"></i> Date: <b><span class = "bookingdate">Please select</span></b>
        </div>
        <div class = "col-12 col-md-6 mt-1 mt-md-3">
          <i class="fa fa-clock-o" aria-hidden="true"></i> Time: <b><span class = "bookingtime">Please select</span></b>
        </div>
        <div class = "col-12 col-md-6 mt-1 mt-md-3">
          <i class="fa fa-users" aria-hidden="true"></i> Users: <b><span class = "bookingusers">Please select</span></b>
        </div>
      </div>
      <div class = "clear"></div>
      <div class = "row">
        <span class = "first-section col-12">
          <div class = "btn btn-primary continue first-continue col-6 pull-right mt-2 disabled">Continue ></div>
        </span>
        <span class = "second-section col-6">
          <div class = "btn btn-secondary col-12 mt-2 continue">< Back</div>
        </span>
        <span class = "second-section col-6">
          <%= link_to 'Book!', '#', class: "btn btn-primary update-test col-12 mt-2", id: current_user.id %>
        </span>
      </div>
    </div>
  </div>
  <div class = "clear my-4"></div>
  <div class = "row first-section">
    <div class = "col-12 col-md-8 offset-md-2">
      <h3 class = "d-inline"><%= "#{@searched_start_time.strftime("%A, %e %b %Y")}, around #{@searched_start_time.strftime("%H:%M")}" %></h3>
      <a class = "toggle-form btn btn-secondary mb-3 ml-3"><i class="fa fa-random" aria-hidden="true"></i> Change</a>
      <div class = "search-form-show-hide">
        <%= form_tag(new_booking_path, method: :get) do %>
          <%= text_field_tag :start_date, @searched_start_time.strftime("%d-%m-%Y"), class: "date col-12 col-md-5 mx-md-2 mb-1 d-inline", "data-provide" => 'datepicker', "data-date-format" => "dd/mm/yyyy", "data-date-autoclose" => "true", "data-date-start-date" => Date.today %>
          <%= select_time @searched_start_time, minute_step: 15, class: "time col-5 col-md-3 mx-1 d-inline" %>
          <%= submit_tag "Search", class: "btn btn-primary" %>
        <% end %>
      </div>
    </div>
  </div>

  <div class = "row">
    <div class = "col-12 col-md-8 offset-md-2">
      <div class = "first-section">
        <div class = "booyah-box py-2">
          <% @rooms.each do |room| %>
          <div class = "row">
            <div class = "col-12">
              <div class = "mb-3">
                <h4 class = "ml-4"><%= room.name %></h4>
                <ul class = "slot-list" id = "slot-list">
                  <% @timeslots.each do |timeslot| %>
                    <% if @bookings.any? {|booking| (booking.start_time..booking.end_time).cover?(timeslot + 1.second) && booking.room_id == room.id}%>
                      <li class = "timeslot my-2 disabled col-5 col-md-3 col-lg-2 mx-1 mx-md-2" data-room = "<%= room.name %>" data-date = "<%= timeslot.strftime("%A, %d %b %Y") %>" data-timestart = "<%= timeslot.strftime("%H:%M") %>" data-timeend = "<%= (timeslot + 15.minute).strftime("%H:%M") %>"><%= "#{timeslot.strftime("%H:%M")} - #{(timeslot + 15.minute).strftime("%H:%M")}" %></li>
                    <% else %>
                      <li class = "timeslot my-2 selectable-timeslot col-5 col-md-3 col-lg-2 mx-1 mx-md-2" data-room = "<%= room.name %>" data-roomid = "<%= room.id %>" data-date = "<%= timeslot.strftime("%A, %d %b %Y") %>" data-timestart = "<%= timeslot.strftime("%H:%M") %>" data-timeend = "<%= (timeslot + 15.minute).strftime("%H:%M") %>"><%= "#{timeslot.strftime("%H:%M")} - #{(timeslot + 15.minute).strftime("%H:%M")}" %></li>
                    <% end %>
                  <% end %>
                </ul>
              </div>
            </div>
            <div class = "col-10 offset-1">
              <hr class = "hr-grey">
            </div>
          </div>
          <% end %>
        </div>
      </div>
      <div class = "second-section users">
        <h3 class = "d-inline">Users</h3>
        <a class = "toggle-user-form btn btn-secondary mb-3 ml-3"><i class="fa fa-search" aria-hidden="true"></i> Search</a>
          <div class = "col-12">
            <div class = "user-form-show-hide mb-2">
              <%= form_tag(users_path, method: :get, :remote => true) do %>
                <%= text_field_tag :name, params[:name], class: "col-12", :placeholder => "Search for a user" %>
              <% end %>
            </div>
        <div class = "row booyah-box">
            <% @users.each do |user| %>
              <div class = "col-md-6">
                <div class = "user-box selectable-user my-3" data-userid = "<%= user.id %>" data-username = <%= "#{user.firstname}" %>>
                  <h5 class = "ml-2 mb-2"><%= user.fullname %></h5>
                  <% user.unique_instruments.each do |instrument| %>
                    <span class = "badge badge-primary"><%= instrument %></span>
                  <% end %>
                <br />
                </div>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>

  </div>
</div>

<script>
$(function () {
  //Dealing with all items that are selectable
  $('.selectable-timeslot').click(function(e) {
    var item = $(e.target);
    var slots = $("ul.slot-list")
    var selectable = $("ul.slot-list").find(".selectable-timeslot");

    //This is really important - it means that none of the function fires if there's a disabled-temp class
    //This is used to essentially disable the event handler on those with a certain class
    if (item.hasClass("disabled-temp")) {
      return false
    } else {
      //We're using nextUntil() and prevUntil() on a clicked start and end points
      //When clicking either end or start, toggle that class
      //If there's not a start present, put a start down
      //Otherwise clear everything that's not the start and put a new end down
      if (item.hasClass("active end")) {
        item.toggleClass("active end");
        slots.find(".active.middle").removeClass("active middle");
      } else if (item.hasClass("active start")) {
        item.toggleClass("active start");
        slots.find(".active.middle").removeClass("active middle");
      } else if (slots.find(".active.start").length === 0) {
        item.toggleClass('active start');
      } else {
        slots.find(".active.end").removeClass("active end");
        slots.find(".active.middle").removeClass("active middle");
        item.toggleClass('active end');
      }

      //if the start is after the end, use prevUntil(), filling them all with active middle
      //otherwise use nextUntil()
      if (slots.find(".active").length > 1) {
        if (slots.find(".start").prevAll(".end").length > 0) {
          $(".start").prevUntil(".end").addClass("active middle");
        } else {
          $(".start").nextUntil(".end").addClass("active middle");
        }
      }

      if (slots.find(".active").length > 0) {
        selectable.removeClass("immune");
        item.addClass("immune");
        item.nextUntil(".disabled").addClass("immune");
        item.prevUntil(".disabled").addClass("immune");
        selectable.not(".immune").addClass("disabled-temp").removeClass("selectable-timeslot");
      } else {
        slots.find(".immune").removeClass("immune");
        slots.find(".disabled-temp").removeClass("disabled-temp").addClass("selectable-timeslot");
      }

      //Find all those that are selected and take the data to put in stuff
      var selected = slots.find(".active");
      var selectedTimeStart = ($(selected[0]).data("timestart"));
      var selectedTimeEnd = ($(selected[selected.length-1]).data("timeend"));
      var selectedRoom = ($(selected[0]).data("room"));
      var selectedDate = ($(selected[0]).data("date"))

      if (selected.length === 0) {
        $( ".bookingroom" ).text("Please select");
        $( ".bookingtime" ).text("Please select");
        $( ".bookingdate" ).text("Please select");
        $( ".first-continue").addClass("disabled");
      } else {
        $( ".bookingroom" ).text(selectedRoom.replace("_", " "));
        $( ".bookingtime" ).text(selectedTimeStart + " - " + selectedTimeEnd);
        $( ".bookingdate" ).text(selectedDate);
        $( ".first-continue").removeClass("disabled");
      }
    }
  });

  //Toggle search form
  $(".toggle-form").click(function() {
    $(".search-form-show-hide").slideToggle();
  });

  //Toggle user-search form
  $(".toggle-user-form").click(function() {
    $(".user-form-show-hide").slideToggle();
  });

  //Slide to select Users
  $(".continue").click(function(){
    $(".first-section").slideToggle();
    $(".second-section").slideToggle();
  });


  //Add active user class, and the find all those with that class
  $(".selectable-user").click(function(e){
    var target = $(e.target)
    if(target.is('div')) {
      user = target;
    } else {
      user = target.parent();
    }

    user.toggleClass("active-user");
    var selectedUsers = $("div.second-section.users").find(".active-user");
    var selectedUsernamesDOM = selectedUsers.map(function(){
      return $(this).data("username").replace("_", " ");
    });
    var selectedUsernames = selectedUsernamesDOM.get();
    $(".bookingusers").text("You, " + selectedUsernames.join(", "));
  });


  //Creates new booking and updates booking id of all selected roomTimeslots
  $('.update-test').click(function() {
    //find all selected users
    var selectedUsers = $("div.second-section").find(".active-user");
    var selectedUserIdsDOM = selectedUsers.map(function(){
      return $(this).data("userid");
    });
    var selectedUserIds = selectedUserIdsDOM.get();

    var slots = $("ul.slot-list").find(".active");
    var selectedStartsDOM = slots.map(function() {
      return $(this).data("timestart");
    });
    var selectedEndsDOM = slots.map(function() {
      return $(this).data("timeend");
    });
    var selectedDatesDOM = slots.map(function() {
      return $(this).data("date");
    })
    var selectedStarts = selectedStartsDOM.get();
    var selectedEnds = selectedEndsDOM.get();
    var selectedDates = selectedDatesDOM.get();

    var selectedStart = selectedStarts[0];
    var selectedEnd   = selectedEnds[selectedEnds.length - 1];
    var selectedDateStart = selectedDates[0];
    var selectedDateEnd = selectedDates[selectedDates.length -1];
    var selectedRoom = ($(slots[0]).data("roomid"));

    $.ajax({
      type: "POST",
      beforeSend: function(xhr) {
        xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
      },
      url: "/bookings",
      data: {
        booking: {
          start_time: selectedDateStart + " " + selectedStart,
          end_time: selectedDateEnd + " " + selectedEnd,
          room_id: selectedRoom,
          user_ids: selectedUserIds
        },
      },
      success: function() {
        swal("Booking confirmed!", "We'll show you your booking details now", "success")
      },
      error: function(data) {
        swal("Bad request!", data.errors, "warning")
      }
    });
  });
});
</script>